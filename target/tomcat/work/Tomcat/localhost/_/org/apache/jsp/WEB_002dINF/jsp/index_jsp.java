/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2016-12-26 03:02:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>CKEditor Classic Editing Sample</title> \r\n");
      out.write(" \r\n");
      out.write("    <script src=\"http://cdn.bootcss.com/jquery/1.11.1/jquery.min.js\" type=\"text/javascript\"></script> \r\n");
      out.write("    \r\n");
      out.write("    <script src=\"https://cdn.ckeditor.com/4.6.0-441b33b/full-all/ckeditor/ckeditor.js\"></script>     \r\n");
      out.write("     <script src=\"ckeditor/plugin-ajax.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<style type=\"text/css\">\r\n");
      out.write("\t/* Minimal styling to center the editor in this sample */\r\n");
      out.write("\tbody {\r\n");
      out.write("\t\tpadding: 30px;\r\n");
      out.write("\t\tdisplay: flex;\r\n");
      out.write("\t\talign-items: center;\r\n");
      out.write("\t\ttext-align: center;\r\n");
      out.write("\t}\r\n");
      out.write("\tp{\r\n");
      out.write("\ttext-align:right; \r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.container {\r\n");
      out.write("\t\tmargin: 0 auto;\r\n");
      out.write("\t}\r\n");
      out.write("\t</style>\r\n");
      out.write("\t\r\n");
      out.write("<script>\t\r\n");
      out.write("/*\r\n");
      out.write("* 1. 每次进入页面前    都从后台取最新的数据到前台   【在index方法里】\r\n");
      out.write("* 2. 缓存数据判断   缓存为空 则将后台最新数据赋值    2 本地缓存  localStorage 自动保存\r\n");
      out.write("* 3. 缓存数据赋值给 texture值\r\n");
      out.write("* 4. 遇到 texture值变化，则自动保存\r\n");
      out.write("*/\r\n");
      out.write("\r\n");
      out.write("$(document).ready(function () {  \r\n");
      out.write("\tvar editor=initeditor();\r\n");
      out.write("\tvar  initcontent= window.sessionStorage.getItem(\"comment_top\");     \r\n");
      out.write("\t// 初始化页面赋值\r\n");
      out.write("    initdata(editor,initcontent);\r\n");
      out.write("\t// 触发自动保存  自动保存功能\r\n");
      out.write("\teditor.on('change', function(evt) {  \r\n");
      out.write("\t\twindow.sessionStorage.setItem(\"comment_top\", evt.editor.getData()); \r\n");
      out.write("\t});\r\n");
      out.write("});\r\n");
      out.write(" \r\n");
      out.write("function initeditor(){\r\n");
      out.write("\t  var editor=  CKEDITOR.replace( 'editor1' , {\r\n");
      out.write("      \ttoolbar: [\r\n");
      out.write("    \t\t\t\t{ name: 'clipboard', items: [ 'Undo', 'Redo' ] },\r\n");
      out.write("    \t\t\t\t{ name: 'styles', items: [ 'Format', 'Font', 'FontSize' ] },\r\n");
      out.write("    \t\t\t\t{ name: 'basicstyles', items: [ 'Bold', 'Italic', 'Underline', 'Strike', 'RemoveFormat', 'CopyFormatting' ] },\r\n");
      out.write("    \t\t\t\t{ name: 'colors', items: [ 'TextColor', 'BGColor' ] },\r\n");
      out.write("    \t\t\t\t{ name: 'align', items: [ 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock' ] },\r\n");
      out.write("    \t\t\t\t{ name: 'links', items: [ 'Link', 'Unlink' ] },\r\n");
      out.write("    \t\t\t\t{ name: 'paragraph', items: [ 'NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote' ] },\r\n");
      out.write("    \t\t\t\t{ name: 'insert', items: [ 'Image', 'Table' ] },\r\n");
      out.write("    \t\t\t\t{ name: 'tools', items: [ 'Maximize' ] },\r\n");
      out.write("    \t\t\t\t{ name: 'editing', items: [ 'Scayt' ] }\r\n");
      out.write("    \t\t\t],\r\n");
      out.write("    \t\t\t\r\n");
      out.write("        height: 800 ,  //外面长方形 高多少\r\n");
      out.write("    \tcontentsCss: [ 'https://cdn.ckeditor.com/4.6.0-441b33b/full-all/ckeditor/contents.css', 'mystyles.css' ] ,   //有无里面的方格      \t\r\n");
      out.write("    \tallowedContent : true ,\r\n");
      out.write("    \tdisallowedContent: 'img{width,height,float}'   ,              \t\r\n");
      out.write("    \textraAllowedContent: 'img[width,height,align]' ,              \t\r\n");
      out.write("    \textraPlugins: 'tableresize,uploadimage,uploadfile' , \r\n");
      out.write("  \t    bodyClass: 'document-editor' ,               \r\n");
      out.write("    \tformat_tags: 'p;h1;h2;h3;pre' ,               \r\n");
      out.write("    \tremoveDialogTabs: 'image:advanced;link:advanced'  \r\n");
      out.write("      });\r\n");
      out.write("\t  return editor;\r\n");
      out.write("};\r\n");
      out.write("      \r\n");
      out.write("function initdata(editor,initcontent){  \r\n");
      out.write("\t\t//显示进度条代码结束\r\n");
      out.write("\tvar aj =$.ajax({\r\n");
      out.write("\t\t\ttype : \"POST\",\r\n");
      out.write("\t\t\turl : \"initdata\",\r\n");
      out.write("\t\t\tasync: false,\r\n");
      out.write("\t\t\tdataType : \"json\",\t\t \r\n");
      out.write("\t\t\tsuccess : function(data) {\r\n");
      out.write("\t\t\t\tif (data == null) {\r\n");
      out.write("\t\t\t\t\talert(\"没查到最新的信息\");\r\n");
      out.write("\t\t\t\t} else if (!initcontent && typeof initcontent != \"undefined\" && initcontent != 0) {\r\n");
      out.write("\t\t\t\t\teditor.setData(data.scontent); \r\n");
      out.write("\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\teditor.setData(initcontent); \r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("};\r\n");
      out.write("//手动保存页面 \r\n");
      out.write(" function ManualSave(){    \r\n");
      out.write("\t\t\tvar aj = $.ajax( {    \r\n");
      out.write("\t\t\t    url:'save',   // 跳转到 action   \t\t      \r\n");
      out.write("\t\t\t    type:'POST',       \r\n");
      out.write("\t\t\t    dataType:'json',    \r\n");
      out.write("\t\t\t   contentType: 'application/json;chartset=UTF-8',\t\t\t \r\n");
      out.write("\t\t\t   data:JSON.stringify(window.sessionStorage.getItem(\"comment_top\")), //  传批量的参数 list\t\t    \r\n");
      out.write("\t\t\t    success:function(data) {    \r\n");
      out.write("\t\t\t        if(data.state){       \r\n");
      out.write("\t\t\t            alert(\"保存成功！\");    \r\n");
      out.write("\t\t\t            window.sessionStorage.removeItem(\"comment_top\");\r\n");
      out.write("\t\t\t            window.location.reload();   \r\n");
      out.write("\t\t\t        }else{    \r\n");
      out.write("\t\t\t        \talert(\"保存失败！\");    \r\n");
      out.write("\t\t\t        }    \r\n");
      out.write("\t\t\t     },    \r\n");
      out.write("\t\t\t     error : function() {      \r\n");
      out.write("\t\t\t          alert(\"网络异常！\");    \r\n");
      out.write("\t\t\t     }    \r\n");
      out.write("\t});  \r\n");
      out.write("};    \r\n");
      out.write("\t\t\r\n");
      out.write("</script> \r\n");
      out.write("     \r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("    <div class=\"container\">   \r\n");
      out.write("          <form method=\"post\">\r\n");
      out.write("            <h2><label for=\"editor1\">周报编辑器</label></h2>  \r\n");
      out.write("            <p><a href=\"javascript:void(0);\" onclick=\"ManualSave();\" >保存</a></p>             \r\n");
      out.write("<!--         <a href=\"javascript:void(0);\" onclick=\"Export();\" >导出</a></p> -->\r\n");
      out.write("            <textarea name=\"editor1\" id=\"editor1\"> </textarea>      \r\n");
      out.write("          </form> \r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
